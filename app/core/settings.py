"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from socket import gethostname, gethostbyname, gethostbyname_ex

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# TODO: Should get changed to a secure one and stored in the env file
SECRET_KEY = 'django-insecure-rf7xzv60!fp3_6oa8m05$%k3^pc3rg6gqkwj+0y@d=6s%9f6t1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '192.168.40.3',
    'https://stockmanagementpoc.zeus.rain.co.za',
    'stockmanagementpoc.zeus.rain.co.za',
    'https://stockmanagementpoc.sit.rain.co.za',
    'stockmanagementpoc.sit.rain.co.za',
    'localhost',
    '0.0.0.0',
    '127.0.0.1',
]

ALLOWED_HOSTS += [
    gethostname(), gethostbyname(gethostname())
]

# Get the hostname based on the node IP - as we use multiple node IPs
ALLOWED_HOSTS += list(set(gethostbyname_ex(gethostname())[2]))

CSRF_TRUSTED_ORIGINS = [
    'https://192.168.40.3',
    'http://stockmanagementpoc.zeus.rain.co.za',
    'https://stockmanagementpoc.zeus.rain.co.za',
    'http://stockmanagementpoc.sit.rain.co.za',
    'https://stockmanagementpoc.sit.rain.co.za',
    'http://0.0.0.0',
    'http://127.0.0.1'
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'tailwind',
    'theme'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'main.middleware.MonitoringCreationMiddleware'
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR, ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # },
    'default': {
        "ENGINE": "django.db.backends.postgresql",
        # Database name
        'NAME': os.environ.get('DB_NAME', default='stockmanagementpoc'),
        # PostgreSQL username
        'USER': os.environ.get('DB_USER', default='stockmanagementpoc'),
        # PostgreSQL password
        'PASSWORD': os.environ.get('db_password', default = os.environ.get('DB_PASSWORD', default = 'stockmanagementpoc')),
        'HOST': os.environ.get('DB_HOST', default = 'zeus-psql-01.rain.network'),    # Database server
        'PORT': os.environ.get('DB_PORT', default='5432'),             # Database port (leave blank for default)
        'OPTIONS': {
            # Database connection SSLMODE
            'sslmode': os.environ.get('DB_SSLMODE', default = 'prefer')
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "main.User"
# LOGIN_URL = 'login'LOGIN_URL = 'login'
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
LOGOUT_REDIRECT_URL = '/'

STATIC_ROOT = STATIC_DIR

TAILWIND_APP_NAME = 'theme'

INTERNAL_IPS = [
    "127.0.0.1",
    "localhost"
]

NPM_BIN_PATH = 'npm.cmd'
TAILWIND_CSS_PATH = 'css/tailwind.css'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s',
        },
    },
    'handlers': {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": 'standard'
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'main': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        "root": {
            "handlers": ["console"],
            "level": "WARNING",
            'formatter': 'standard',
        }
    }
}

# AWS Credentials
#TODO: Should be in the env file
AWS_SERVER_PUBLIC_KEY = os.environ.get('AWS_SERVER_PUBLIC_KEY', default="AKIAQ3EGP6JGYM6CDNMT")
AWS_SERVER_SECRET_KEY = os.environ.get('AWS_SERVER_SECRET_KEY', default="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")
